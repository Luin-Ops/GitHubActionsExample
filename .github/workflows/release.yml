name: Release Pipeline

on:
  push:
    tags: [ 'v*' ]

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.11", "3.12"]
            fail-fast: false # continue running tests even if some fail.
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/setup-and-test
              with:
                python-version: ${{ matrix.python-version }}

    build:
        needs: test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.11", "3.12"]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/docker-build-push
              with:
                python-version: ${{ matrix.python-version }}

    security-scan:
        needs: build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.11", "3.12"]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/trivy-scan-upload
              with:
                python-version: ${{ matrix.python-version }}

    deploy:
        needs: security-scan
        runs-on: ubuntu-latest
        strategy:
            matrix:
                environment: ["staging", "production"]
        environment: ${{ matrix.environment }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Run Deploy to ${{ matrix.environment }}
              run: echo "Deploying to ${{ matrix.environment }} environment"
            - name: Deploy to ${{ matrix.environment }}
              run: echo "Deployed to ${{ matrix.environment }} environment successfully"
                