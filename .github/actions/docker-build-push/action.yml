name: Docker Build and Push
description: Build and push the Docker image to the registry

inputs:
  python-version:
    description: The Python version to use
    required: true
  docker-username:
    description: The Docker username to use
    required: true
  docker-password:
    description: The Docker password to use
    required: true  

runs:
  using: "composite"
  steps:

  - name: Login to Docker Registry
    uses: docker/login-action@v3
    with:
      username: ${{ inputs.docker-username }}
      password: ${{ inputs.docker-password }}

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3

  - name: Build and push the Docker image
    uses: docker/build-push-action@v5
    with:
      context: .
      build-args: PYTHON_VERSION=${{ inputs.python-version }}
      push: true
      load: true
      registry: docker.io
      username: ${{ inputs.docker-username }}
      password: ${{ inputs.docker-password }}
      tags: ${{ inputs.docker-username }}/hello-flask:py${{ inputs.python-version }}
      cache-from: type=gha
      cache-to: type=gha,mode=max

  - name: Test the Docker container
    run: |
      docker run -d --name test-container-${{ inputs.python-version }} \
                -p 800${{ strategy.job-index}}:8000 \
                -e PYTHON_VERSION=${{ inputs.python-version }} \
                ${{ inputs.docker-username }}/hello-flask:py${{ inputs.python-version }}
      sleep 10
      curl -f http://localhost:800${{ strategy.job-index }}/health
      curl -f http://localhost:800${{ strategy.job-index }}/api/info
    shell: bash

  - name: Stop container
    run: |
      docker stop test-container-${{ inputs.python-version }}
      docker rm test-container-${{ inputs.python-version }}
    shell: bash